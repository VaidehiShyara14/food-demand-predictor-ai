from langgraphagent.state.state import FoodDemandState
from langgraphagent.LLMS.load_model import load_llm
from langchain_core.messages import HumanMessage

def predict_meals(state: FoodDemandState) -> FoodDemandState:
    buffer = 2  # extra meals buffer
    total_meals = state['present'] + buffer

    veg_percent = state.get('veg_ratio', 70)
    veg_count = int((veg_percent / 100) * total_meals)
    non_veg_count = total_meals - veg_count

    eng_output = (
        f"A simple problem!\n\n"
        f"Since {state['present']} students are present, and {state['registered']} are registered, "
        f"that means {state['registered'] - state['present']} students are absent.\n"
        f"To avoid waste, the mess should prepare meals for the {state['present']} present students, "
        f"plus a buffer of {buffer} extra meals.\n\n"
        f" Total meals to prepare: {total_meals}\n"
        f"ЁЯеЧ Vegetarian meals: {veg_count}\n"
        f"ЁЯНЧ Non-Vegetarian meals: {non_veg_count}\n"
    )

    hindi_output = (
        f"\n\n**рд╣рд┐рдВрджреА рдореЗрдВ рдЕрдиреБрд╡рд╛рдж:**\n"
        f"рдХреБрд▓ {state['present']} рдЫрд╛рддреНрд░ рдЙрдкрд╕реНрдерд┐рдд рд╣реИрдВ рдФрд░ {state['registered']} рдкрдВрдЬреАрдХреГрдд рд╣реИрдВ, рддреЛ {state['registered'] - state['present']} рдЕрдиреБрдкрд╕реНрдерд┐рдд рд╣реИрдВред\n"
        f"рднреЛрдЬрди рдХреА рдмрд░реНрдмрд╛рджреА рд░реЛрдХрдиреЗ рдХреЗ рд▓рд┐рдП, рдореЗрд╕ рдХреЛ {buffer} рдЕрддрд┐рд░рд┐рдХреНрдд рднреЛрдЬрди рдХреЗ рд╕рд╛рде {state['present']} рдЫрд╛рддреНрд░реЛрдВ рдХреЗ рд▓рд┐рдП рднреЛрдЬрди рдмрдирд╛рдирд╛ рдЪрд╛рд╣рд┐рдПред\n"
        f"рдХреБрд▓ рднреЛрдЬрди: {total_meals}, рд╢рд╛рдХрд╛рд╣рд╛рд░реА: {veg_count}, рдорд╛рдВрд╕рд╛рд╣рд╛рд░реА: {non_veg_count}"
    )

    gujarati_output = (
        f"\n\n**ркЧрлБркЬрк░рк╛ркдрлАркорк╛ркВ ркЕркирлБрк╡рк╛ркж:**\n"
        f"ркХрлБрк▓ {state['present']} рк╡рк┐ркжрлНркпрк╛рк░рлНркерлАркУ рк╣рк╛ркЬрк░ ркЫрлЗ ркЕркирлЗ {state['registered']} ркирлЛркВркзрк╛ркпрлЗрк▓рк╛ ркЫрлЗ, ркдрлЛ {state['registered'] - state['present']} ркЧрлЗрк░рк╣рк╛ркЬрк░ ркЫрлЗ.\n"
        f"ркнрлЛркЬрки ркмркЧрк╛ркбркерлА ркмркЪрк╡рк╛ ркорк╛ркЯрлЗ, ркорлЗрк╖рлЗ {buffer} рк╡ркзрк╛рк░рк╛ркирк╛ ркнрлЛркЬрки рк╕рк╛ркерлЗ {state['present']} рк╡рк┐ркжрлНркпрк╛рк░рлНркерлАркУ ркорк╛ркЯрлЗ ркнрлЛркЬрки ркдрлИркпрк╛рк░ ркХрк░рк╡рлБркВ ркЬрлЛркИркП.\n"
        f"ркХрлБрк▓ ркнрлЛркЬрки: {total_meals}, рк╢рк╛ркХрк╛рк╣рк╛рк░рлА: {veg_count}, ркорк╛ркВрк╕рк╛рк╣рк╛рк░рлА: {non_veg_count}"
    )

    state["ai_response"] = eng_output + hindi_output + gujarati_output
    return state

